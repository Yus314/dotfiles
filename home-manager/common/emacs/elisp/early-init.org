
#+TITLE: early-init.el - Configurations for GNU Emacs
#+AUTHOR: takeokunn
#+EMAIL: bararararatty@gmail.com
#+STARTUP: content
#+STARTUP: fold
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://www.pirilampo.org/styles/readtheorg/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://www.pirilampo.org/styles/readtheorg/css/readtheorg.css"/>
#+HTML_HEAD: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
#+HTML_HEAD: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://www.pirilampo.org/styles/lib/js/jquery.stickytableheaders.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://www.pirilampo.org/styles/readtheorg/js/readtheorg.js"></script>
* early-init.el
** Header
#+begin_src emacs-lisp :tangle yes
  ;; early-init.el --- My early-init.el -*- lexical-binding: t -*-
#+end_src
** 自動的なpackageのロードを無効にする
#+begin_src emacs-lisp :tangle yes
  (setq package-enable-at-startup nil)
#+end_src
** initialize error を無効化する
#+begin_src emacs-lisp :tangle yes
  (setq warning-suppress-log-types '((package reinitialization)))
#+end_src
** scroll bar非表示
#+begin_src emacs-lisp :tangle yes
  (push '(vertical-scroll-bars . nil	) default-frame-alist)
  (push '(holizontal-scroll-bars . nil) default-frame-alist)
#+end_src
** tab bar非表示
#+begin_src emacs-lisp :tangle yes
  (push '(menu-bar-lines . 0) default-frame-alist)
  (push '(tool-bar-lines . 0) default-frame-alist)
#+end_src
** 行番号を表示
#+begin_src emacs-lisp :tangle yes
  (global-display-line-numbers-mode  t)
#+end_src
** スタートアップメッセージを非表示
#+begin_src emacs-lisp :tangle yes
  (setq inhibit-startup-message t)
#+END_SRC
** 自動生成ファイルを無効にする
#+begin_src emacs-lisp :tangle yes
  (setq make-backup-files nil)
  (setq auto-save-default nil)
  (setq auto-save-list-file-prefix nil)
  (setq create-lockfiles nil)
#+END_SRC
** GC/Memory
#+begin_src emacs-lisp :tangle yes
  (setq gc-cons-threshold (* 512 1024 1024))
  (setq garbage-collection-messages nil)
#+END_SRC
** read-process
#+begin_src emacs-lisp :tangle yes
  (setq read-process-output-max (* 8 1024 1024))
#+end_src
** ビープ音を消す
#+begin_src emacs-lisp :tangle yes
  (setq ring-bell-function 'ignore)
#+end_src
** デフォルトのpathをかえる
#+begin_src emacs-lisp :tangle yes
  (setq default-directory "~/")
  (setq command-line-default-directory "~/")
#+end_src
** scratch buffer
#+begin_src emacs-lisp :tangle yes
  (setq initial-scratch-message nil)
  (setq initial-major-mode 'fundamental-mode)
#+end_src
** ふぉんと追加
#+begin_src emacs-lisp :tangle yes
    ;(when (member "Bizin Gothic Discord NF" (font-family-list))
    ;(push '(font . "Bizin Gothic Discord NF-16") default-frame-alist)
  ;(set-fontset-font nil 'japanese-jisx0208
  ;		  (font-spec  :family "Bizin Gothic Discord NF-16"))
  (set-language-environment 'Japanese)
  (prefer-coding-system 'utf-8-unix)
  (set-face-attribute 'default nil :family "Bizin Gothic Discord NF" :height 160)
  ;)
#+end_src
** x session resourcesを無視します
#+begin_src emacs-lisp :tangle yes
  (advice-add 'x-apply-session-resources :override 'ignore)
#+end_src
** inhibit-compacting-font-caches
#+begin_src emacs-lisp :tangle yes
  (setq inhibit-compacting-font-caches t)
#+end_src
** history-delete-duplicates
#+begin_src emacs-lisp :tangle yes
  (setq history-delete-duplicates t)
#+end_src
** vc-follow-symlinks
#+begin_src emacs-lisp :tangle yes
  (setq vc-follow-symlinks t)
#+end_src
** error抑制
#+begin_src emacs-lisp :tangle yes
  (setq byte-compile-warnings '(cl-functions))
#+end_src

** フレームのリサイズを抑制
#+begin_src emacs-lisp :tangle yes
  (setq frame-inhibit-implied-resize t)
#+end_src
